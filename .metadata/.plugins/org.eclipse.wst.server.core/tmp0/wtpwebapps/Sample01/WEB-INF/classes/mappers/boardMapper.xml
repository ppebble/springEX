<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<!-- 01_01. 게시글 전체목록 조회 및 검색 조회까지 -->
<select id="listAll" resultType="com.example.spring01.board.model.dto.BoardVO">
	<include refid="pagingHeader"></include>
	    SELECT DISTINCT bno, title, content, b.regdate, user_name AS userName
	    
	    FROM tbl_board b, tbl_member m
	    
	    <!-- WHERE절을 include 태그로 삽입 -->
		<include refid="search"></include>
	    ORDER BY bno desc, b.regdate DESC
	<include refid="pagingFooter"></include>
    
</select>
 
<!-- 01_02. 게시글 레코드 갯수 -->
<select id="countArticle" resultType="int">
    SELECT COUNT(*) FROM tbl_board b, tbl_member m
    <!-- WHERE절을 include 태그로 삽입 -->
    <include refid="search"></include>
</select>
 
<!-- sql code 조각 -->
<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
<sql id="search">
    <choose>
        <!-- 검색옵션이 전체 검색일 경우 -->
        <when test="searchOption == 'all'">
            WHERE b.writer = m.user_id AND
            m.user_name like CONCAT('%', #{keyword}, '%')
            OR content like CONCAT('%', #{keyword}, '%')
            OR title like CONCAT('%', #{keyword}, '%')
        </when>
        <!-- 전체 검색이 아닐 경우 -->
        <otherwise>
            WHERE b.writer = m.user_id
            AND ${searchOption} like CONCAT('%', #{keyword}, '%')
        </otherwise>
    </choose>
</sql>
<sql id = "pagingHeader">
	SELECT DISTINCT * FROM(
		(SELECT DISTINCT ROW_NUMBER() OVER(ORDER BY(SELECT 1)) AS rn, A.* FROM(
</sql>
<sql id="pagingFooter">
	) AS A) AS B
	)WHERE rn BETWEEN #{start} AND #{end}
</sql>
	<!-- 02. 게시글 작성 -->
	<insert id="insert">

		INSERT INTO tbl_board(
		title, content, writer, regdate) VALUES(
		#{title}, #{content}, #{writer},(SELECT NOW())
		);
	</insert>
	<!--03. 게시글 상세보기 조회 -->
	<select id="view"
		resultType="com.example.spring01.board.model.dto.BoardVO">
		SELECT * FROM tbl_board
		WHERE bno = #{bno}
	</select>
	
	<!-- 05. 게시글 수정처리 -->
	<update id="updateArticle">
		UPDATE tbl_board SET
		title = #{title},
		content = #{content}
		WHERE bno = #{bno}
	</update>
	<!-- 06. 게시글 삭제처리 -->
	<delete id="deleteArticle">
		DELETE FROM tbl_board
		WHERE bno = #{bno}
	</delete>
</mapper>